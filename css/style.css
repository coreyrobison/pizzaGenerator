@-webkit-keyframes fadeIn {
    from {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}

@-moz-keyframes fadeIn {
    from {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}

@keyframes fadeIn {
    from {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}


/*Make complete background color change*/

html.ng-scope {
    background-color: #FEF2E4;
}


/*Landing view*/

.title {
    color: black;
    font-size: 50px;
    text-align: center;
}

img {
    width: 500px;
    display: block;
    margin-left: auto;
    margin-right: auto;
}

.pizza-button-container {
    text-align: center;
    margin-top: -75px;
    position: relative;
    padding-top: 60px;
}

.pizza-button {
    width: 300px;
    height: 100px;
    position: absolute;
    top: 50%;
    left: 50%;
    margin: -15px 0 0 -150px;
}


/*Random pizza view*/

.pizza-ready {
    color: black;
    font-size: 50px;
    text-align: center;
}

.no-likey {
    color: black;
    font-size: 50px;
    text-align: center;
    padding-top: 0px;
}

.try-again {
    text-align: center;
    padding-bottom: 30px;
}

.order-now {
    text-align: center;
    padding-bottom: 30px;
}

.card .card-image .card-title {
    font-size: 40px;
    font-weight: 800;
    line-height: 1;
    -webkit-text-stroke: 1px black;
    color: white;
    text-shadow: 3px 3px 0 #000, -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000;
}

.card {
    opacity: 0;
    /* make things invisible upon start */
    -webkit-animation: fadeIn ease-in 1;
    /* call our keyframe named fadeIn, use animattion ease-in and repeat it only 1 time */
    -moz-animation: fadeIn ease-in 1;
    animation: fadeIn ease-in 1;
    -webkit-animation-fill-mode: forwards;
    /* this makes sure that after animation is done we remain at the last keyframe value (opacity: 1)*/
    -moz-animation-fill-mode: forwards;
    animation-fill-mode: forwards;
    -webkit-animation-duration: 2s;
    -moz-animation-duration: 2s;
    animation-duration: 2s;
}

.containerDude {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-around;
}

.ng-isolate-scope {
    width: 400px;
}

.row {
    width: 500px;
}

.waves-effect {
    position: absolute;
}


/*Map view*/

.map-small {
    padding-top: 25px;
    text-align: center;
}

.map-medium {
    padding-top: 25px;
    text-align: center;
}

.map-large {
    padding-top: 25px;
    text-align: center;
}

.map-title {
    text-align: center;
}

@media (min-width: 0px) {
    .map-small {
        display: block;
    }
    .map-medium {
        display: none;
    }
    .map-large {
        display: none;
    }
}

@media (min-width: 600px) {
    .map-small {
        display: none;
    }
    .map-medium {
        display: block;
    }
    .map-large {
        display: none;
    }
}

@media (min-width: 1000px) {
    .map-small {
        display: none;
    }
    .map-medium {
        display: none;
    }
    .map-large {
        display: block;
    }
}